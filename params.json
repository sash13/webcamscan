{"name":"Webcamscan","tagline":"web camera scaner","body":"# webcamscan\r\nСкрипт для полу-автоматического поиска веб-камер в сети, умеющий искать RTSP-трансляции и делать их срины, умеющий подбирать логин-пароли для вэб-панелей, умеющий сортировать результаты и ставить тэги.\r\nПолучается примерно так:\r\n![Пример результата](http://i.imgur.com/dMNDljm.png)\r\n\r\n___\r\n:bangbang: **ВНИМАНИЕ: Скрипт предназначен только для ознакомительных и учебных целей. Использование его может быть *противозаконным*. Используйте его на свой страх и риск с согласия всех участников.**\r\n___\r\n\r\n### Зависимости скрипта:\r\nОбязательно:\r\n* ~~ЖМУ/Пинус~~ GNU/Linux. Может быть и OSX, но я не пробовал.\r\n* `bash`, ну или какой-нибудь еще шелл.\r\n* Команда `timeout`, сейчас она есть везде, но вдруг вы — аутист?\r\n* `nmap-nse` — NMap с поддержкой скриптов (NSE).\r\n* `libav` (`avprobe`, `avconv`) — Для анализа трансляций и скриншотов.\r\n\r\nНе обязательно:\r\n* `git`, что бы склонировать реп.\r\n* TODO: `ffmpeg` (`ffprobe`) как альтернатива `libav`.\r\n\r\n### Запуск скрипта:\r\n* `git clone https://github.com/voaoom/webcamscan.git`\r\n* `cd webcamscan`\r\n* `chmod +x ./webcamscan.sh`\r\n* Вы можете поднастроить скрипт по своему вкусу, раскомментировав и поправив в строки в файле `./config.sh`. См. ниже.\r\n* Скрипт работает под правами суперпользователя. Это необходимо для эффективной работы `nmap`. Где гарантии, что он не сделает `rm -rf /`? Их нет, мне похуй.\r\n* Скрипт принимает на вход файл с подсетями-целми: `sudo ./webcamscan.sh <путь/к/списку/адресов.txt>`. Список адресов содержит либо конкретные хосты и адреса, либо подсети, разделенные любыми проблеьными символами.\r\n\r\n### Настройки скрипта\r\nВы можете поднастроить скрипт по своему вкусу, раскомментировав и поправив в строки в файле `./config.sh`. Будте осторожны: я не делал защиту от дебилов. Неправильные значения могут поломать скрипт и снести вашу систему. **Почитайте ниже, как скрипт работает**, что бы понимать, что  происходит.\r\nПараметры:\r\n* `ПАРАМЕТР=значение-по-умолчанию` — описание. Булевые значения должны быть `true` или `false`.\r\n* `NMAPDIR=.` — используется для указания `nmap`, где он работает.\r\n* `WRITE_ALL_HOSTS=true` — записывать все обнаруженные адреса в файл all_hosts.txt или нет.\r\n* `HOST_TIMELIMIT=5m` — cуммарное максимальное время затрачиваемое на один хост. Суффикс `m` означает минуты, еще можно `s` и `h` — секунды и часы. Не стоит выставлять большие значения. Скрипт не работает параллельно, так что во время тупления над одним хостом другие хосты не сканируются.\r\n* `RTSP_URLS='./rtsp-urls.txt'` — Файл с возможными URL-ами RTSP, используется для перебора. Буду очень рад, если вы поможете мне его пополнить. За основу взят стандартный файл из `nmap`.\r\n* `FIND_AUTH=true` — искать на хосте страницы с авторизацией или нет.\r\n* `BRUTEFORCE=true` — делать ли перебор логин-паролей для вэб-панели, если это возможно или нет.\r\n* `BRUTEFORCE_TIMELIMIT=2m` — максимальное время перебора логин-паролей на одном хосте. Здесь всё тоже, что и `HOST_TIMELIMIT`. Этого мало для серьёзного перебора, но находит всякие дурацкие пароли.\r\n* `LIBAV_LIMIT=4` — Ограничение на анализ трансляций (из всех обнаруженных на одной камере). Это важное ограничение, ибо некоторые можели вэб-камер начисто игнорят URL-ы, и транслируют всегда. В таком случае `nmap` найдет чуть более, чем дохуя трансляций, но на самом деле это всё будет одна и таже. Да и вообще у многих камер есть параллельные трансляции. Что бы не тратить время на анализ потоков и нарезане скриншотов, нужно это ограничение.\r\n* `LIBAV_SCREENSHOT=true` — пытаться делать скриншоты или нет.\r\n* `SAVE_NO_FLAGS=false` — сохранять информацию о хостах, у которых нет тегов или нет.\r\n* `CLEANUP=true` — удалять за собой временные файлы или нет.\r\n\r\n### Работа скрипта:\r\n* :one: **Первый этап**: Скрипт, используя `nmap`, полностью сканирует все эти сети на предмет открытого RTSP-порта — это с 95% вероятностью вэб-камера (1% — медиасервер, 4% — что-нибудь еще). Все обнаруженные хосты сохраняются.\r\n    * Примечание: Этот этап может выполняться долго и тихо, так что я добавил сюда прогресс. Прогресс отчитывается по строкам входного файла. Каждая строка по очереди загоняется в `nmap`, так что если всё будет записано в одну строку, то прогресса не будет, а если каждый адрес на своей строке, то на каждый адрес каждый раз будет завново запускаться `nmap`. Таким образом, первый случай быстрый, но не наглядный, а второй наглядный, но медленный.\r\n* :two: **Второй этап**: Скрипт, используя `nmap`, подробно сканирует найденые хосты. На этом этапе, в звисимости от настроек, происходит:\r\n    * Быстрый **перебор логин-паролей** на HTTP-панели, если такая панель обнаружена, что бы найти пары типа `admin:admin` и `root:123456`.\r\n    * Поиск других страниц авторизации, если они существуют, но они **пока** не перебираются. Перебираются только те, что находятся в `/` HTTP-службы.\r\n    * Быстрый **перебор известных RTSP-URL-ов**, что бы найти все возможные трансляции, но нет гарантий, что скрипт точно обнаружит их. Если он не нашел ниодной трансляции, но RTSP-сервер выглядит рабочим, то, скорее всего, там используются более хитрые URL-ы и/или авторизация. Попробуйте порыться в вэб-панели, может найдете информацию. Если ничего не получилось, то этот хост можно прогнорировать или до-взламывать вручную.\r\n    * Найденые RTSP-URL-ы передаются в `avprobe` для изучения трансляции, а также создаются их скриншоты с помощью `avconv`. Иногда сервера ебут мозги отправляя пустые пакеты или какой-нибудь мусор, из-за чего эти две программы начинают тупить и это может растянуться на часы. На них выставлено ограничение в несколько десятков секунд, так что есть вероятность, что они не выдадут результат.\r\n    * Выхлоп программ парсится, на основе чего для каждого хоста **выставляются тэги**:\r\n        * `http` — если была обнаружена хотя бы одна работающая HTTP-служба. От этого тэга зависят:\r\n            * `creds` — если был обнаружен какой-то метод авторизации, был проведен перебор и он оказался успешным — учётные данные **найдены**.\r\n            * `nocreds` — если был обнаружен какой-то метод авторизации, был проведен перебор и он оказался проавльным — учётные данные **не найдены**.\r\n        * `rtsp` — если была обнаружена хотя бы одна RTSP-служба. От этого тэга зависят:\r\n            * `found` — если найден хотя бы один корректный URL трансляции (но не гарантируется, что в трансляции корректные данные). \r\n            * `video` — если найдена хотя бы одна трансляция, содержащая **видео**-поток (но не гарантируется, что в этом потоке адекватные данные).\r\n            * `audio` — если найдена хотя бы одна трансляция, содержащая **аудио**-поток (но не гарантируется, что в этом потоке адекватные данные).\r\n            * `il` — почему-то `libav` не всегда дружит с Interleaved (TCP) RTSP. Если найдена хотя бы одна такая трансляция, то выставляется этот тэг. Это **не** означает, что трансляция не работает. Она, вероятно, будет открываться с ошибками в плеерах на основе `libav`, но может корректно работать в других, например `vlc`.\r\n        * `error` — какая-то ошибка, из-за которой невозможно утверждать о корректности **отрицательных** результатов. Регистрируется в следующих случаях:\r\n            * Скрипт `rtsp-url-brute` в `nmap` выкинул ошибку. Как правило, возникает, если нарушается протокол. Возможно, RTPS-служба, на самом деле не RTPS или просто она кривая и багнутая.\r\n        * Если ниодин тэг не был проставлен, значит этот хост по-видимому не представляет интереса. Таких хостов может быть очень много.\r\n        * Если зависимость тэгов нарушена, то отпишите мне. Не то что бы это был баг или типа того, ~~бака~~, возможно, этот новый неисследованый случай.\r\n    * Результаты сохраняются:\r\n        * В файлы вида `<папка-выхлопа>/<адрес-хоста>_[тэг_[...]].txt` — отчёт `nmap` и отчёты `avprobe`.\r\n        * В файлы вида `<папка-выхлопа>/<адрес-хоста>_<порядковый-номер-трансляции>.jpg` — скриншот, сделаный `avconv`.\r\n        * В файл `all_hosts.txt` — список всех адресов, которые сканировались на втором этапе.\r\n        * В файл `all.txt` — все отчёты `nmap` и `avprobe` в хронологическом порядке.\r\n        * По умолчанию `<пака-выхлопа>/` это `<путь-входного-файла>-webcam/`.\r\n        * Если файлы уже существуют, то будет выполнена дозапись в их конец.\r\n        * Сохранение происходит во время второго этапа, так что эти файлы будут появляться по мере обработки хостов.\r\n\r\n### История версий:\r\n( https://github.com/voaoom/webcamscan/releases )\r\n\r\n**v2** ~ 2015-10-14\r\n* Переписано на функциях, более структурированный и оптимизированный код.\r\n* Изменения тегов:\r\n    * `tcp` переименован в `il`.\r\n    * `rtsp` переименован в `found`.\r\n    * Добавлен (другой) `rtsp`.\r\n* Добавлен параметр `SAVE_NO_FLAGS`.\r\n* Параметр `BRUTEFORCE_TIMELIMIT` по умолчанию изменен с `1m` до `2m` + внутринние изменения о таймаутах.\r\n* Добавлены записи в `rtsp-urls.txt` для видеорегистораторов RVi.\r\n\r\n**v1** ~ 2015-10-13\r\n* Первый релиз.","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}